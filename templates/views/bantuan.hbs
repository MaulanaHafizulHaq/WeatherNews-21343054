<html>
  <head>
    <title>Bantuan</title>
    <link rel="icon" href="/img/weather-icon.png" />
    <link rel="stylesheet" href="/css/style.css" />
  </head>
  <body>
    <div class="main-content-bantuan">
        {{>header}}
      <div class="question">
        <h2>1. Halaman Ini Digunakan Untuk Apa?</h2>
      </div>
      <div class="answer">
        <p>Halaman Ini Dibuat Untuk Menampilkan Informasi Yang Berisi Jawaban Dari Pertanyaan Yang Diberikan Pada Instruksi pengerjaan UTS.</p>
      </div>

      <div class="question">
        <h2>2.Apa itu API</h2>
      
    </div>

      <div class="answer">
        <p>API merupakan singkatan dari Application Programming Interface. Ini adalah seperangkat protokol, 
            alat, dan definisi yang memungkinkan aplikasi perangkat lunak yang berbeda untuk berkomunikasi 
            satu sama lain. API mendefinisikan metode dan format data yang dapat 
            digunakan aplikasi untuk meminta dan bertukar informasi.</p>
      </div>
      <div class="question">
        <h2>3.Api Apa yg Digunakan Dalam Aplikasi ini</h2>
      
    </div>

      <div class="answer">
        <p>Weatherstack API: Menyediakan data cuaca global, termasuk prakiraan, informasi cuaca saat ini, histori cuaca</p>
        <p>MediaStack : Mediastack adalah layanan API yang fokus pada data berita dan informasi dari berbagai sumber berita online. 
            Layanan ini memungkinkan pengguna untukmengakses dan mengintegrasikan informasi berita 
            dari berbagai sumber dan kanal secara langsung ke dalam aplikasi atau situs web mereka.</p>
      </div>
      <div class="question">
        <h2>4.Salah Satu Pola Arsitektur (pilih salah satu SOAP,RESTful,GraphQL,Dan gRPC) </h2>
      
    </div>

      <div class="answer">
        <p>RESTful (Representational State Transfer) adalah salah satu dari banyak 
            pola arsitektur yang digunakan dalam pengembangan API (Application Programming Interface). 
            RESTful adalah pendekatan yang telah menjadi populer dalam desain API karena sederhana, 
            mudah dimengerti, dan efisien dalam pertukaran data antara klien dan server.</p>
            <p>Gambar : </p>
            <center>
            <img src="/img/restful.png" alt="">
            </center>
            <p> - Klien: Ini adalah aplikasi atau sistem yang ingin berinteraksi dengan layanan RESTful. 
                Klien membuat permintaan HTTP ke layanan RESTful.</p>
                <p> - Permintaan HTTP: Permintaan HTTP adalah pesan yang
                     dibuat oleh klien dan dikirim ke server. Pesan ini berisi operasi
                      atau metode yang ingin dilakukan oleh layanan RESTful, bersama dengan parameter yang diperlukan.</p>
               <p> - Server: Server adalah tempat layanan RESTful berjalan. 
                Ini menerima permintaan HTTP dari klien, memprosesnya, dan mengirimkan respons HTTP kembali ke klien.</p>
               <p> - Respons HTTP: Respons HTTP adalah pesan yang dihasilkan oleh layanan
                 RESTful sebagai tanggapan terhadap permintaan klien. Ini berisi hasil dari operasi yang dijalankan oleh layanan</p>
      </div>

    </div>
  </body>
</html>